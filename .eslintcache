[{"F:\\GSSOC\\React-Messenger-App\\src\\index.js":"1","F:\\GSSOC\\React-Messenger-App\\src\\reportWebVitals.js":"2","F:\\GSSOC\\React-Messenger-App\\src\\App.js":"3","F:\\GSSOC\\React-Messenger-App\\src\\firebase.js":"4","F:\\GSSOC\\React-Messenger-App\\src\\components\\Dropdown.js":"5","F:\\GSSOC\\React-Messenger-App\\src\\components\\Button.js":"6","F:\\GSSOC\\React-Messenger-App\\src\\Messages.js":"7"},{"size":517,"mtime":1615311369755,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1615311369803,"results":"10","hashOfConfig":"9"},{"size":6288,"mtime":1617531738672,"results":"11","hashOfConfig":"9"},{"size":540,"mtime":1615311369754,"results":"12","hashOfConfig":"9"},{"size":1433,"mtime":1616427501034,"results":"13","hashOfConfig":"9"},{"size":0,"mtime":1617452945089,"results":"14","hashOfConfig":"9"},{"size":1708,"mtime":1617531738673,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1uvkc83",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\GSSOC\\React-Messenger-App\\src\\index.js",[],["33","34"],"F:\\GSSOC\\React-Messenger-App\\src\\reportWebVitals.js",[],"F:\\GSSOC\\React-Messenger-App\\src\\App.js",["35","36","37","38","39","40","41","42","43","44","45","46"],"import './App.css';\r\nimport {useState,useEffect,useRef, createRef} from 'react';\r\nimport {Button, Input,FormControl} from \"@material-ui/core\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\"\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport logo from './logo.png';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport Messages from './Messages.js'\r\nimport db from \"./firebase.js\"\r\nimport firebase from \"firebase\";\r\n\r\n\r\nimport ArrowForwardIosOutlinedIcon from '@material-ui/icons/ArrowForwardIosOutlined';\r\nimport './switcher.css';\r\nimport ArrowLeftRoundedIcon from '@material-ui/icons/ArrowLeftRounded';\r\n\r\n\r\n\r\n\r\n// I have to make changes\r\nfunction App() {\r\n\r\n  const[colorTheme,setColorTheme]=useState('theme-white');\r\n  const [input,setInput]=useState(\"\");\r\n  const inputRef=createRef();\r\n  const [messages,setMessages]=useState([]);\r\n  const [username,setUsername]=useState(\"\");\r\n  const [dark,setDark]=useState(false);\r\n  const[showEmojis,setShowEmojis]=useState(false);\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const messagesEndRef=useRef(null);\r\n  const[cursorPosition,setCursorPosition]=useState();\r\n  \r\n\r\n\r\n  useEffect(()=>{\r\nconst currentThemeColor=localStorage.getItem('theme-color');\r\nif(currentThemeColor){\r\n  setColorTheme(currentThemeColor);\r\n}\r\n\r\n  },[])\r\n  useEffect(()=>{\r\n    setUsername(prompt(\"Kindly Enter Your Name\"));\r\n  },[])\r\n\r\n  useEffect(()=>{db.collection('messages').orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot=>setMessages(snapshot.docs.map(doc=>doc.data())))},[])\r\n\r\n  useEffect(() => { scrollToBottom() }, [messages]);\r\n  useEffect(()=>{\r\n    messagesEndRef.current.selectionEnd=cursorPosition;\r\n  \r\n  },[cursorPosition]);\r\n  \r\nconst handleChange=e=>{\r\n  setMessages(e.target.value);\r\n}\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"auto\" })\r\n  };\r\nconst pickEmoji=(e,{emoji})=>{\r\n  const ref=messagesEndRef.current;\r\n  ref.focus();\r\n  const start=messages.substring(0,ref.selectionStart);\r\n  const end=messages.substring(ref.selectionStart);\r\n  const text=start+emoji+end;\r\n  setMessages(emoji);\r\n  setCursorPosition(start.length+emoji.length);\r\n};\r\n\r\n  const newMessage= (event)=>{\r\n    event.preventDefault();\r\n    //setMessages([...messages,{message:input,username:username}]);\r\n    if(input!==\"\")\r\n    {\r\n      db.collection('messages').add({username:username,message:input,timestamp:firebase.firestore.FieldValue.serverTimestamp()})\r\n    }\r\n    setInput(\"\");\r\n  }\r\n \r\n\r\n\r\n\r\n  const theme=(event)=>{\r\n    \r\n    //add multicolr themes here\r\n    if(dark===false)\r\n    {\r\n      document.body.classList.add('dark-bg');\r\n      setDark(true);\r\n    }\r\n    else\r\n    {\r\n      document.body.classList.remove('dark-bg');\r\n      setDark(false);\r\n    }\r\n  }\r\n  let check=true;\r\n  const colorstheme=()=>{\r\nif(document.getElementById(\"theme-options\")&& check==true)\r\n    {check=false;\r\n      document.getElementById(\"theme-options\").style.visibility = \"visible\";\r\n  }\r\n  else if(document.getElementById(\"theme-options\")&& check==false)\r\n{\r\n  check=true;\r\n      document.getElementById(\"theme-options\").style.visibility = \"hidden\";\r\n}\r\n}\r\n\r\n  let but;\r\n  if(dark)\r\n  {\r\n    but=<input className={`input ${dark?\"dark_input\":\"\"}`} placeholder=\"Write Your Message\" value={input} onChange={event=>setInput(event.target.value)} />\r\n  }\r\n  else\r\n  {\r\n    but=<Input className={`input ${dark?\"dark_input\":\"\"}`} placeholder=\"Write Your Message\" value={input} onChange={event=>setInput(event.target.value)} />\r\n  }\r\n\r\n  const handleClick=(themec)=>{\r\nsetColorTheme(themec);\r\nlocalStorage.setItem('theme-color',themec)\r\n  }\r\n\r\n  return (\r\n    <div className={`App ${colorTheme}`}>\r\n    \r\n     \r\n      <nav className={`NavBar ${dark?\"BlackNavBar\":\"\"}`} >\r\n        <div className=\"flex1\">\r\n          <img className=\"Logo\" src={logo} alt=\"messenger-logo\" />\r\n          \r\n          <h1 className=\"messenger\" ><span className={`${dark?\"blackName\":\"\"} `}\r\n          style={{color:\"orange\"}}>Mess</span><span className={`${dark?\"blackName\":\"\"} `}  style={{color:\"deeppink\"}} >enger</span></h1>\r\n        </div>\r\n       \r\n         \r\n  \r\n       \r\n          <div id='theme-options'>\r\n        \r\n          <Button id=\"blackbtn\" title=\"toggle Dark Mode\"  className=\"dark\" onClick={theme} ><Brightness4Icon /></Button>\r\n          \r\n          <table>\r\n\r\n         <tr>\r\n           \r\n            <th>\r\n       <div id='theme-pink' title=\"dark pink\"\r\n       onClick={()=>handleClick('theme-pink')}\r\n       /></th>\r\n        <th><div id='theme-white' title=\"original\"\r\n       onClick={()=>handleClick('theme-white')}\r\n       /></th>\r\n      <th>\r\n       <div id='theme-orange' title=\"orange\"\r\n        onClick={()=>handleClick('theme-orange')}/>\r\n</th>\r\n    <th>\r\n       <div id='theme-purple' title=\"purple\"\r\n       onClick={()=>handleClick('theme-purple')}\r\n       />\r\n</th>\r\n<th>\r\n       <div id='theme-green' title=\"green\"\r\n       onClick={()=>handleClick('theme-green')}/>\r\n</th>\r\n</tr>\r\n\r\n\r\n\r\n\r\n</table>\r\n\r\n     </div>\r\n     <Button id=\"themebtn\" title=\"Click for various theme color\"className=\"btntheme\" onClick={colorstheme} ><ArrowLeftRoundedIcon/><br></br>Theme Store</Button>\r\n      </nav>\r\n      <div className=\"scroll\" >\r\n        <br/><br/><br/><br/><br/>\r\n        {\r\n          messages.map(message=><Messages messages={message} username={username} dark={dark} key={genKey()}/>)\r\n        }\r\n        <div />\r\n        <br/><br/><br/><br/><br/>\r\n      </div>\r\n      <div ref={messagesEndRef} />\r\n      <footer className={`${dark?\"footer_dark\":\"\"}`} >\r\n      \r\n      \r\n          \r\n          <div>\r\n          \r\n        <form>\r\n        \r\n          <FormControl>\r\n            {but}\r\n           \r\n          </FormControl>\r\n         {/* emoji picker button */}\r\n         <Button className=\"iconButton\" onClick={newMessage} type=\"submit\" variant=\"contained\" color=\"primary\" > <SendIcon /></Button>\r\n   \r\n         \r\n          \r\n            \r\n       \r\n       \r\n           \r\n     \r\n          \r\n        </form>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n// keys generator:- every new call to this function will give numbs like 0,1,2,3....\r\nconst genKey = (function (){\r\n  var keyCode = 0\r\n  return function incKey(){\r\n    return keyCode++;\r\n  }\r\n})();\r\n\r\nexport default App;\r\n","F:\\GSSOC\\React-Messenger-App\\src\\firebase.js",[],"F:\\GSSOC\\React-Messenger-App\\src\\components\\Dropdown.js",[],["47","48"],"F:\\GSSOC\\React-Messenger-App\\src\\components\\Button.js",[],"F:\\GSSOC\\React-Messenger-App\\src\\Messages.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":13,"column":8,"nodeType":"55","messageId":"56","endLine":13,"endColumn":35},{"ruleId":"53","severity":1,"message":"58","line":25,"column":9,"nodeType":"55","messageId":"56","endLine":25,"endColumn":17},{"ruleId":"53","severity":1,"message":"59","line":29,"column":9,"nodeType":"55","messageId":"56","endLine":29,"endColumn":19},{"ruleId":"53","severity":1,"message":"60","line":29,"column":20,"nodeType":"55","messageId":"56","endLine":29,"endColumn":33},{"ruleId":"53","severity":1,"message":"61","line":30,"column":10,"nodeType":"55","messageId":"56","endLine":30,"endColumn":21},{"ruleId":"53","severity":1,"message":"62","line":30,"column":23,"nodeType":"55","messageId":"56","endLine":30,"endColumn":37},{"ruleId":"53","severity":1,"message":"63","line":55,"column":7,"nodeType":"55","messageId":"56","endLine":55,"endColumn":19},{"ruleId":"53","severity":1,"message":"64","line":61,"column":7,"nodeType":"55","messageId":"56","endLine":61,"endColumn":16},{"ruleId":"53","severity":1,"message":"65","line":66,"column":9,"nodeType":"55","messageId":"56","endLine":66,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":100,"column":52,"nodeType":"68","messageId":"69","endLine":100,"endColumn":54},{"ruleId":"66","severity":1,"message":"67","line":104,"column":59,"nodeType":"68","messageId":"69","endLine":104,"endColumn":61},{"ruleId":"49","replacedBy":"70"},{"ruleId":"51","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'InsertEmoticonIcon' is defined but never used.","Identifier","unusedVar","'ArrowForwardIosOutlinedIcon' is defined but never used.","'inputRef' is assigned a value but never used.","'showEmojis' is assigned a value but never used.","'setShowEmojis' is assigned a value but never used.","'chosenEmoji' is assigned a value but never used.","'setChosenEmoji' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'pickEmoji' is assigned a value but never used.","'text' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["72"],["73"],"no-global-assign","no-unsafe-negation"]