[{"F:\\GSSOC\\React-Messenger-App\\src\\index.js":"1","F:\\GSSOC\\React-Messenger-App\\src\\reportWebVitals.js":"2","F:\\GSSOC\\React-Messenger-App\\src\\App.js":"3","F:\\GSSOC\\React-Messenger-App\\src\\firebase.js":"4","F:\\GSSOC\\React-Messenger-App\\src\\Messages.js":"5","F:\\GSSOC\\React-Messenger-App\\src\\emojis\\emojiscomponents.js":"6","F:\\GSSOC\\React-Messenger-App\\src\\emojis\\emojisstyles.js":"7","F:\\GSSOC\\React-Messenger-App\\src\\components\\Dropdown.js":"8"},{"size":517,"mtime":1615311369755,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1615311369803,"results":"11","hashOfConfig":"10"},{"size":6476,"mtime":1617215773567,"results":"12","hashOfConfig":"10"},{"size":540,"mtime":1615311369754,"results":"13","hashOfConfig":"10"},{"size":1708,"mtime":1615311369754,"results":"14","hashOfConfig":"10"},{"size":404,"mtime":1615394264356,"results":"15","hashOfConfig":"10"},{"size":310,"mtime":1615404773651,"results":"16","hashOfConfig":"10"},{"size":1433,"mtime":1616427501034,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1uvkc83",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"F:\\GSSOC\\React-Messenger-App\\src\\index.js",[],["38","39"],"F:\\GSSOC\\React-Messenger-App\\src\\reportWebVitals.js",[],"F:\\GSSOC\\React-Messenger-App\\src\\App.js",["40","41","42","43","44","45","46","47","48","49","50","51"],"import './App.css';\r\nimport {useState,useEffect,useRef, createRef} from 'react';\r\nimport {Button, Input,FormControl} from \"@material-ui/core\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\"\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport logo from './logo.png';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport Messages from './Messages.js'\r\nimport db from \"./firebase.js\"\r\nimport firebase from \"firebase\";\r\nimport Emoji from'./emojis/emojiscomponents';\r\nimport Picker from 'emoji-picker-react';\r\nimport ArrowForwardIosOutlinedIcon from '@material-ui/icons/ArrowForwardIosOutlined';\r\nimport './switcher.css';\r\n\r\n\r\n\r\n\r\n// I have to make changes\r\nfunction App() {\r\n\r\n  const[colorTheme,setColorTheme]=useState('theme-white');\r\n  const [input,setInput]=useState(\"\");\r\n  const inputRef=createRef();\r\n  const [messages,setMessages]=useState([]);\r\n  const [username,setUsername]=useState(\"\");\r\n  const [dark,setDark]=useState(false);\r\n  const[showEmojis,setShowEmojis]=useState(false);\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const messagesEndRef=useRef(null);\r\n  const[cursorPosition,setCursorPosition]=useState();\r\n  \r\n\r\n\r\n  useEffect(()=>{\r\nconst currentThemeColor=localStorage.getItem('theme-color');\r\nif(currentThemeColor){\r\n  setColorTheme(currentThemeColor);\r\n}\r\n\r\n  },[])\r\n  useEffect(()=>{\r\n    setUsername(prompt(\"Kindly Enter Your Name\"));\r\n  },[])\r\n\r\n  useEffect(()=>{db.collection('messages').orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot=>setMessages(snapshot.docs.map(doc=>doc.data())))},[])\r\n\r\n  useEffect(() => { scrollToBottom() }, [messages]);\r\n  useEffect(()=>{\r\n    messagesEndRef.current.selectionEnd=cursorPosition;\r\n  \r\n  },[cursorPosition]);\r\n  \r\nconst handleChange=e=>{\r\n  setMessages(e.target.value);\r\n}\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"auto\" })\r\n  };\r\nconst pickEmoji=(e,{emoji})=>{\r\n  const ref=messagesEndRef.current;\r\n  ref.focus();\r\n  const start=messages.substring(0,ref.selectionStart);\r\n  const end=messages.substring(ref.selectionStart);\r\n  const text=start+emoji+end;\r\n  setMessages(emoji);\r\n  setCursorPosition(start.length+emoji.length);\r\n};\r\n\r\n  const newMessage= (event)=>{\r\n    event.preventDefault();\r\n    //setMessages([...messages,{message:input,username:username}]);\r\n    if(input!==\"\")\r\n    {\r\n      db.collection('messages').add({username:username,message:input,timestamp:firebase.firestore.FieldValue.serverTimestamp()})\r\n    }\r\n    setInput(\"\");\r\n  }\r\n  const handleShowEmojis=()=>{\r\n    messagesEndRef.current.focus();\r\nsetShowEmojis(!showEmojis);\r\n  };\r\n\r\n\r\n\r\n  const theme=(event)=>{\r\n    \r\n    //add multicolr themes\r\n    if(dark===false)\r\n    {\r\n      document.body.classList.add('dark-bg');\r\n      setDark(true);\r\n    }\r\n    else\r\n    {\r\n      document.body.classList.remove('dark-bg');\r\n      setDark(false);\r\n    }\r\n  }\r\n  let check=true;\r\n  const colorstheme=()=>{\r\nif(document.getElementById(\"theme-options\")&& check==true)\r\n    {check=false;\r\n      document.getElementById(\"theme-options\").style.visibility = \"visible\";\r\n  }\r\n  else if(document.getElementById(\"theme-options\")&& check==false)\r\n{\r\n  check=true;\r\n      document.getElementById(\"theme-options\").style.visibility = \"hidden\";\r\n}\r\n}\r\n\r\n  let but;\r\n  if(dark)\r\n  {\r\n    but=<input className={`input ${dark?\"dark_input\":\"\"}`} placeholder=\"Write Your Message\" value={input} onChange={event=>setInput(event.target.value)} />\r\n  }\r\n  else\r\n  {\r\n    but=<Input className={`input ${dark?\"dark_input\":\"\"}`} placeholder=\"Write Your Message\" value={input} onChange={event=>setInput(event.target.value)} />\r\n  }\r\n\r\n  const handleClick=(themec)=>{\r\nsetColorTheme(themec);\r\nlocalStorage.setItem('theme-color',themec)\r\n  }\r\n\r\n  return (\r\n    <div className={`App ${colorTheme}`}>\r\n    \r\n     \r\n      <nav className={`NavBar ${dark?\"BlackNavBar\":\"\"}`} >\r\n        <div className=\"flex1\">\r\n          <img className=\"Logo\" src={logo} alt=\"messenger-logo\" />\r\n          \r\n          <h1 className=\"messenger\" ><span className={`${dark?\"blackName\":\"\"} `}\r\n          style={{color:\"orange\"}}>Mess</span><span className={`${dark?\"blackName\":\"\"} `}  style={{color:\"deeppink\"}} >enger</span></h1>\r\n        </div>\r\n       \r\n         \r\n    <Button id=\"themebtn\" title=\"Click for various theme color\"className=\"btntheme\" onClick={colorstheme} >< ArrowForwardIosOutlinedIcon/></Button>\r\n        \r\n          <div id='theme-options'>\r\n          \r\n         \r\n          <Button title=\"toggle Dark Mode\"  className=\"dark\" onClick={theme} ><Brightness4Icon /></Button>\r\n    \r\n       <div id='theme-pink' \r\n       onClick={()=>handleClick('theme-pink')}\r\n       />\r\n        <div id='theme-white' title=\"original\"\r\n       onClick={()=>handleClick('theme-white')}\r\n       />\r\n       <div id='theme-orange' title=\"orange\"\r\n        onClick={()=>handleClick('theme-orange')}/>\r\n\r\n       <div id='theme-purple'\r\n       onClick={()=>handleClick('theme-purple')}\r\n       />\r\n       <div id='theme-green'\r\n       onClick={()=>handleClick('theme-green')}/>\r\n\r\n\r\n     </div>\r\n        \r\n      </nav>\r\n      <div className=\"scroll\" >\r\n        <br/><br/><br/><br/><br/>\r\n        {\r\n          messages.map(message=><Messages messages={message} username={username} dark={dark} key={genKey()}/>)\r\n        }\r\n        <div />\r\n        <br/><br/><br/><br/><br/>\r\n      </div>\r\n      <div ref={messagesEndRef} />\r\n      <footer className={`${dark?\"footer_dark\":\"\"}`} >\r\n      \r\n      {\r\n              // <div className={`emoji-list ${!showEmojis && 'hidden'}`}>\r\n              //   <Emoji pickEmoji={pickEmoji}/>\r\n              //   </div>\r\n            }\r\n          \r\n          <div>\r\n            {/* <div className=\"emoji-icon\">\r\n            <InsertEmoticonIcon onClick={handleShowEmojis}/>\r\n            </div> */}\r\n        <form>\r\n        \r\n          <FormControl>\r\n            {but}\r\n           \r\n          </FormControl>\r\n         {/* emoji picker button */}\r\n         <Button className=\"iconButton\" onClick={newMessage} type=\"submit\" variant=\"contained\" color=\"primary\" > <SendIcon /></Button>\r\n   \r\n         \r\n          \r\n            \r\n       \r\n       \r\n           \r\n     \r\n          \r\n        </form>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n// keys generator:- every new call to this function will give numbs like 0,1,2,3....\r\nconst genKey = (function (){\r\n  var keyCode = 0\r\n  return function incKey(){\r\n    return keyCode++;\r\n  }\r\n})();\r\n\r\nexport default App;\r\n","F:\\GSSOC\\React-Messenger-App\\src\\firebase.js",[],"F:\\GSSOC\\React-Messenger-App\\src\\Messages.js",[],"F:\\GSSOC\\React-Messenger-App\\src\\emojis\\emojiscomponents.js",["52"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {EmojiPickerContainer,EmojisContainer} from './emojisstyles';\r\nimport { Emoji } from 'emoji-mart';\r\nconst Emojis=({pickEmoji})=>{\r\nreturn (\r\n<EmojisContainer>\r\n    {\r\n        <EmojiPickerContainer onEmojiClick={pickEmoji}/>\r\n    }\r\n</EmojisContainer>\r\n);\r\n};\r\nEmojis.propTypes={\r\npickEmoji:PropTypes.func\r\n};\r\nexport default Emojis;","F:\\GSSOC\\React-Messenger-App\\src\\emojis\\emojisstyles.js",["53"],"\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport EmojiPicker from 'emoji-picker-react';\r\n\r\n export const EmojisContainer = styled.div`\r\n width:100% ;\r\n max-height:100%;\r\n overflow-y:auto;\r\n background-color:;\r\n\r\n `;\r\n\r\n export const EmojiPickerContainer=styled(EmojiPicker)`\r\n `;","F:\\GSSOC\\React-Messenger-App\\src\\components\\Dropdown.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":13},{"ruleId":"58","severity":1,"message":"63","line":12,"column":8,"nodeType":"60","messageId":"61","endLine":12,"endColumn":14},{"ruleId":"58","severity":1,"message":"64","line":24,"column":9,"nodeType":"60","messageId":"61","endLine":24,"endColumn":17},{"ruleId":"58","severity":1,"message":"65","line":29,"column":10,"nodeType":"60","messageId":"61","endLine":29,"endColumn":21},{"ruleId":"58","severity":1,"message":"66","line":29,"column":23,"nodeType":"60","messageId":"61","endLine":29,"endColumn":37},{"ruleId":"58","severity":1,"message":"67","line":54,"column":7,"nodeType":"60","messageId":"61","endLine":54,"endColumn":19},{"ruleId":"58","severity":1,"message":"68","line":60,"column":7,"nodeType":"60","messageId":"61","endLine":60,"endColumn":16},{"ruleId":"58","severity":1,"message":"69","line":65,"column":9,"nodeType":"60","messageId":"61","endLine":65,"endColumn":13},{"ruleId":"58","severity":1,"message":"70","line":79,"column":9,"nodeType":"60","messageId":"61","endLine":79,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":102,"column":52,"nodeType":"73","messageId":"74","endLine":102,"endColumn":54},{"ruleId":"71","severity":1,"message":"72","line":106,"column":59,"nodeType":"73","messageId":"74","endLine":106,"endColumn":61},{"ruleId":"58","severity":1,"message":"62","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":15},{"ruleId":"58","severity":1,"message":"75","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":13},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'InsertEmoticonIcon' is defined but never used.","Identifier","unusedVar","'Emoji' is defined but never used.","'Picker' is defined but never used.","'inputRef' is assigned a value but never used.","'chosenEmoji' is assigned a value but never used.","'setChosenEmoji' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'pickEmoji' is assigned a value but never used.","'text' is assigned a value but never used.","'handleShowEmojis' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]